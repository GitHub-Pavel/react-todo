{"version":3,"sources":["components/Form.js","components/ListItem.js","components/List.js","components/ListDoneItem.js","components/ListDone.js","components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","state","value","historyText","resetInput","bind","back","addList","handleChange","e","preventDefault","this","list","map","index","key","edit","text","setState","disEdit","inputBool","form","FormData","target","listPush","keyIndex","length","condition","inputTextRen","className","onSubmit","type","name","placeholder","required","onChange","onClick","title","Component","ListItem","inputChange","deleteList","editCond","delete","data-id","editFunc","List","items","removeFunc","editCondition","checked","listDone","titleText","Todo","editList","listState","item","closest","getAttribute","confList","bool","who","listInn","itemsArray","itemKey","querySelector","push","cond","itemsArraySecond","allArray","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19b82a58.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport './Form.css'\r\n\r\nexport default class Form extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      value: '',\r\n      historyText: ''\r\n    }\r\n\r\n    this.resetInput = this.resetInput.bind(this)\r\n\r\n    this.back = this.back.bind(this)\r\n\r\n    this.addList = this.addList.bind(this)\r\n\r\n    this.handleChange = this.handleChange.bind(this)\r\n  }\r\n\r\n  resetInput(e) {\r\n    e.preventDefault()\r\n\r\n    this.props.list.map((index, key) => {\r\n      if (index.edit) {\r\n        return this.props.list[key].text = ''\r\n      }\r\n    })\r\n\r\n    this.setState(state => ({\r\n      value: ''\r\n    }))\r\n  }\r\n\r\n  back(e) {\r\n    e.preventDefault()\r\n\r\n    this.props.list.map((index, key) => {\r\n      if(index.edit) {\r\n        this.props.list[key].text = this.state.historyText\r\n      } \r\n    })\r\n\r\n    this.setState(state => ({\r\n      value: '',\r\n      historyText: ''\r\n    }))\r\n    this.props.disEdit()\r\n  }\r\n\r\n  addList(e) {\r\n    e.preventDefault()\r\n\r\n    let inputBool = false\r\n\r\n    for(let index of this.props.list) {\r\n      if(index.edit) {\r\n        inputBool = index.edit\r\n      } \r\n    }\r\n    \r\n    if (inputBool) {\r\n      this.setState(state => ({\r\n        value: ''\r\n      }))\r\n      this.props.disEdit()\r\n\r\n      return false\r\n    }\r\n\r\n    const form = new FormData(e.target)\r\n\r\n    for (let value of form) {\r\n      this.props.listPush({\r\n        keyIndex: this.props.list.length,\r\n        text: value[1],\r\n        condition: false,\r\n        edit: false\r\n      })\r\n    }\r\n\r\n    this.resetInput(e)\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.props.list.map((index, key) => {\r\n      if (index.edit) {\r\n        return this.props.list[key].text = e.target.value\r\n      }\r\n    })\r\n\r\n    this.setState(state => ({\r\n      value: e.target.value\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    let inputTextRen = ''\r\n    let inputBool = false\r\n\r\n    for(let index of this.props.list) {\r\n      if(index.edit) {\r\n        inputTextRen = index.text\r\n        inputBool = index.edit\r\n        if (this.state.historyText === '') {\r\n          this.state.historyText = index.text\r\n        }\r\n      } \r\n    }\r\n\r\n    return (\r\n      <form \r\n        className='tasks-form'\r\n        onSubmit={this.addList}\r\n      >\r\n        <label className='tasks-form__label'>\r\n          <input \r\n            className='input tasks-form__input' \r\n            type='text' name='taskname' \r\n            placeholder='Название задачи' \r\n            required='required'\r\n            value={inputBool ? inputTextRen : this.state.value}\r\n            onChange={this.handleChange} \r\n          />\r\n          <button \r\n            className='tasks-form__times'\r\n            onClick={this.resetInput}\r\n            title='Удалить'\r\n          >\r\n            &times;\r\n          </button>\r\n          <button\r\n            className={`tasks-form__back ${inputBool ? 'tasks-form__back--active' : ''}`}\r\n            onClick={this.back}\r\n          >\r\n            Отмена\r\n          </button>\r\n        </label>\r\n        <button \r\n          className='btn tasks-form__submit' \r\n          type='submit'\r\n        >\r\n          {inputBool ? 'Изменить' : 'Создать'}\r\n        </button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport './ListItem.css'\r\n\r\nexport default class ListItem extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.inputChange = this.inputChange.bind(this)\r\n    this.deleteList = this.deleteList.bind(this)\r\n  }\r\n\r\n  inputChange(e) {\r\n    this.props.editCond(e, true)\r\n  }\r\n\r\n  deleteList(e) {\r\n    this.props.delete(e, true)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <li \r\n        className='tasks-list__item'\r\n        data-id={this.props.keyIndex}\r\n      >\r\n        <label className='check tasks-list__label'>\r\n          <input \r\n            className='check__input visually-hidden tasks-list__input'\r\n            type='checkbox'\r\n            value={this.props.keyIndex}\r\n            onChange={this.inputChange}\r\n          />\r\n          <span className='check__box tasks-list__box--inactive'></span>\r\n          <span className='check__text task-list__text'>{this.props.text}</span>\r\n        </label>\r\n        <button \r\n          onClick={this.props.editFunc}\r\n          className='tasks-list__edit'\r\n        >\r\n          Изменить\r\n        </button>\r\n        <button \r\n          className='tasks-list__remove'\r\n          onClick={this.deleteList}\r\n          title='Удалить'\r\n        >\r\n          &times;\r\n        </button>\r\n      </li>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nimport ListItem from './ListItem'\r\nimport './List.css'\r\n\r\nexport default function List(props) {\r\n  const items = props.list.map((value, key) => !value.edit ? \r\n    <ListItem \r\n      key={key} \r\n      keyIndex={value.keyIndex} \r\n      text={value.text} \r\n      condition={value.condition} \r\n      edit={value.edit} \r\n      delete={props.removeFunc} \r\n      editCond={props.editCondition} \r\n      editFunc={props.editFunc} \r\n    /> : false\r\n  )\r\n\r\n  return (\r\n    <section className='section'>\r\n      <h2>Все ваши задачи</h2>\r\n      <ul className='tasks-list'>\r\n        {items.length === 0 ? <p>У вас нет задач...</p> : items}\r\n      </ul>\r\n    </section>\r\n  )\r\n}\r\n\r\n","import React, { Component } from 'react'\r\n\r\nimport './ListItem.css'\r\n\r\nexport default class ListItem extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.deleteList = this.deleteList.bind(this)\r\n  }\r\n\r\n  deleteList(e) {\r\n    this.props.delete(e, false)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <li className='tasks-list__item'>\r\n        <label className='check tasks-list__label'>\r\n          <input \r\n            className='check__input visually-hidden tasks-list__input'\r\n            type='checkbox'\r\n            value={this.props.keyIndex}\r\n            onChange={this.deleteList}\r\n            checked\r\n          />\r\n          <span className='check__box'></span>\r\n          <span className={this.props.condition ? 'text--through check__text task-list__text' : 'check__text task-list__text' }>{this.props.text}</span>\r\n        </label>\r\n        <button \r\n          className='tasks-list__remove'\r\n          onClick={this.deleteList}\r\n          title='Удалить из выполненных'\r\n        >\r\n          &times;\r\n        </button>\r\n      </li>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nimport ListDoneItem from './ListDoneItem'\r\nimport './List.css'\r\n\r\nexport default function List(props) {\r\n  const items = props.listDone.map((value, key) => !value.edit ? \r\n    <ListDoneItem \r\n      key={key} \r\n      keyIndex={value.keyIndex} \r\n      text={value.text} \r\n      condition={value.condition} \r\n      edit={value.edit} \r\n      delete={props.removeFunc} \r\n      editCond={props.editCondition} \r\n    /> : false\r\n  )\r\n\r\n  const titleText = props.listDone.length === 0 ? '' : 'Решенные задачи'\r\n\r\n  return (\r\n    <section className='section'>\r\n      <h2>{titleText}</h2>\r\n      <ul className='tasks-list'>\r\n        {items}\r\n      </ul>\r\n    </section>\r\n  )\r\n}\r\n\r\n","import React, { Component } from 'react'\r\n\r\nimport Form from './Form'\r\nimport List from './List'\r\nimport ListDone from './ListDone'\r\n\r\nexport default class Todo extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      list: [],\r\n      listDone: []\r\n    }\r\n\r\n    this.listPush = this.listPush.bind(this)\r\n    this.editList = this.editList.bind(this)\r\n    this.editCondition = this.editCondition.bind(this)\r\n    this.editFunc = this.editFunc.bind(this)\r\n    this.disEdit = this.disEdit.bind(this)\r\n  }\r\n\r\n  editFunc(e) {\r\n    const listState = this.state.list\r\n\r\n    for(let item of listState) {\r\n      item.edit = false\r\n      if (item.keyIndex === +e.target.closest('.tasks-list__item').getAttribute('data-id')) {\r\n        item.edit = true\r\n      }\r\n    }\r\n\r\n    this.setState(state => ({\r\n      list: listState\r\n    }))\r\n  }\r\n\r\n  disEdit() {\r\n    const confList = this.state.list\r\n\r\n    for(let item of confList) {\r\n      item.edit = false\r\n    }\r\n\r\n    this.setState(state => ({\r\n      list: confList\r\n    }))\r\n  }\r\n\r\n  listPush(item) {\r\n    this.setState(state => ({\r\n      list: [...this.state.list, item]\r\n    }))\r\n  }\r\n\r\n  editList(e, bool) {\r\n    const who = bool ? this.state.list : this.state.listDone\r\n    let listInn = this.state.list\r\n    const itemsArray = []\r\n    const itemKey = e.target.closest('.tasks-list__item').querySelector('.tasks-list__input').value\r\n    \r\n    who.map((index, value) => index.keyIndex !== +itemKey ? itemsArray.push(index) : listInn.push(index) )    \r\n\r\n    this.setState(state => ( bool ? {\r\n      list: itemsArray\r\n    } : {\r\n      listDone: itemsArray,\r\n      list: listInn\r\n    }))\r\n  }\r\n\r\n  editCondition(e, cond) {\r\n    let itemsArray = cond ? this.state.list : this.state.listDone\r\n    let itemsArraySecond = !cond ? this.state.list : this.state.listDone\r\n    const itemKey = e.target.closest('.tasks-list__item').querySelector('.tasks-list__input').value\r\n    let allArray = []\r\n\r\n    for (let index of itemsArray) {\r\n      if (index.keyIndex === +itemKey) {\r\n        index.condition = cond\r\n        itemsArraySecond.push(index)\r\n      } else {\r\n        allArray.push(index)\r\n      }\r\n    }\r\n\r\n    this.setState(state => ({\r\n      list: allArray,\r\n      listDone: itemsArraySecond\r\n    }))\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className='section'>\r\n        <div className='container'>\r\n          <Form \r\n            list={this.state.list}\r\n            listPush={this.listPush}\r\n            disEdit={this.disEdit}\r\n          />\r\n          <List \r\n            list={this.state.list}\r\n            removeFunc={this.editList}\r\n            editCondition={this.editCondition}\r\n            editFunc={this.editFunc}\r\n          />\r\n          <ListDone \r\n            listDone={this.state.listDone}\r\n            removeFunc={this.editList}\r\n            editCondition={this.editCondition}\r\n          />\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n","import './App.css'\n\nimport Todo from './components/Todo'\n\nfunction App() {\n  return (\n    <div className='app'>\n      <Todo />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}